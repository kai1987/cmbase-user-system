// Generated by CoffeeScript 1.8.0
(function() {
  var async, express;

  async = require("async");

  express = require('express');

  module.exports = function(app, passport, auth) {
    var home, router, users;
    users = require("../controllers/users");
    router = express.Router();
    router.get('/login', users.login);
    router.get('/signup', users.signup);
    router.get('/logout', users.logout);
    router.post('/users', users.create);
    router.post('/api/signup', (function(req, res, next) {
      return (req.speak_as = "json") && next();
    }), users.create);
    router.post('/users/session', passport.authenticate('local', {
      failureRedirect: '/login',
      failureFlash: '无效的用户名或者密码.'
    }), users.session);
    router.post('/api/login', passport.authenticate('local', {
      session: false
    }), users.passwordLogin);
    router.post('/api/change_password', passport.authenticate('local', {
      session: false
    }), (function(req, res, next) {
      return (req.speak_as = "json") && next();
    }), users.changePassword);
    router.get('/users/:userId', users.show);
    router.post('/api/udidlogin', passport.authenticate('oauth2-public-client', {
      session: false
    }), users.udidlogin);
    router.post('/api/udidbind', passport.authenticate('oauth2-public-client', {
      session: false
    }), users.udidbind);
    home = require("../controllers/home");
    router.get('/', home.index);
    app.use(router);
    app.use(function(err, req, res, next) {
      if (~err.message.indexOf('not found')) {
        return next();
      }
      console.error(err.stack);
      if (err.name === 'EvalError') {
        return res.json({
          error: err.toString(),
          success: false
        });
      }
      return res.status(500).render('500', {
        error: err.stack
      });
    });
    return app.use(function(req, res, next) {
      return res.status(404).render('404', {
        url: req.originalUrl,
        error: 'Not found'
      });
    });
  };

}).call(this);
